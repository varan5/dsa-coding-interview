
# Time (Worst/Average): O(n) --> where 'n' is the length of the linked list
# Time (Best):          O(1) --> this case is true, if the list has 0 or 1 nodes and there is no need to traverse the entire list
# Space:                O(1) --> no extra memory is used, apart from some variables, using constant space

class LinkedList:
    def __init__(self, data):
        self.data = data
        self.next = next


def length_linked_list(head):
    if head is None:
        return 0
    if head.next is None:
        return 1
    length_counter = 0
    current_node = head
    while current_node is not None:
        length_counter += 1
        current_node = current_node.data
    
    return length_counter